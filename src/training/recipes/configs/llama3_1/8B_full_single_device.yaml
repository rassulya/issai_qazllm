# Config for single device full finetuning in full_finetune_single_device.py
# using a Llama3.1 8B Instruct model
#
# This config assumes that you've run the following command before launching
# this run:
#   tune download meta-llama/Meta-Llama-3.1-8B-Instruct --output-dir /tmp/Meta-Llama-3.1-8B-Instruct --ignore-patterns "original/consolidated.00.pth"
#
# The default config uses an optimizer from bitsandbytes. If you do not have it installed,
# you can install it with
#   pip install bitsandbytes
#
# To launch on a single device, run the following command from root:
#   tune run full_finetune_single_device --config llama3_1/8B_full_single_device
#
# You can add specific overrides through the command line. For example
# to override the checkpointer directory while launching training
# you can run:
#   tune run full_finetune_single_device --config llama3_1/8B_full_single_device checkpointer.checkpoint_dir=<YOUR_CHECKPOINT_DIR>
#
# This config works only for training on single device.


# Tokenizer
tokenizer:
  _component_: torchtune.models.llama3.llama3_tokenizer
  path: /data/nvme3n1p1/adal_workspace/custom_tokenizer/llama3-1-tokenizer-kk-plus

# Dataset
dataset:
  _component_: torchtune.datasets.text_completion_dataset
  split: train
  column: text
  source: json
  data_files: /data/nvme1n1p1/qazllm/datasets/jsonGzLLMEnKz190724C/gzipAll/scrap_add.json
  # data_files: /data/nvme1n1p1/qazllm/datasets/jsonGzLLMEnKz190724C/wiki_head.json
  max_seq_len: 8192
  packed: True
seed: null
shuffle: False

# Model Arguments
model:
  _component_: torchtune.models.llama3_1.llama3_1_8b

checkpointer:
  _component_: torchtune.utils.FullModelHFCheckpointer
  checkpoint_dir: /data/nvme1n1p1/qazllm/Meta-Llama-3.1-8B-Instruct
  checkpoint_files: [
    model-00001-of-00004.safetensors,
    model-00002-of-00004.safetensors,
    model-00003-of-00004.safetensors,
    model-00004-of-00004.safetensors
  ]
  recipe_checkpoint: null
  output_dir: /data/nvme3n1p1/adal_workspace/batyr_adal_exp/torchtune/checkpoints
  model_type: LLAMA3
resume_from_checkpoint: True
save_per_step: 1000

# Fine-tuning arguments
batch_size: 64
epochs: 3
optimizer:
  _component_: bitsandbytes.optim.PagedAdamW8bit
  lr: 2e-5
loss:
  _component_: torch.nn.CrossEntropyLoss
max_steps_per_epoch: null
gradient_accumulation_steps: 1
optimizer_in_bwd: True
compile: False

# Training environment
device: cuda

# Memory management
enable_activation_checkpointing: True

# Reduced precision
dtype: bf16

# Logging
metric_logger:
  _component_: torchtune.utils.metric_logging.DiskLogger
  log_dir: ${output_dir}
output_dir: /data/nvme3n1p1/adal_workspace/batyr_adal_exp/torchtune/logs
log_every_n_steps: 1
log_peak_memory_stats: False

sub_length: 1000
train_type: base