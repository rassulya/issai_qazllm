# Tokenizer
tokenizer:
  _component_: torchtune.models.llama3.llama3_tokenizer
  path: tokenizer_path
  max_seq_len: 8192

# Dataset
dataset:
  _component_: torchtune.datasets.instruct_dataset
  source: json
  split: train
  data_files: dataset_path/*.json
  template: torchtune.data.AlpacaInstructTemplate
  column_map:
    instruction: instruction
    input: input
    output: output
  max_seq_len: 8192
  packed: True
seed: null
shuffle: False


# Model Arguments
model:
  _component_: torchtune.models.llama3_1.llama3_1_8b

checkpointer:
  _component_: torchtune.utils.FullModelHFCheckpointer
  checkpoint_dir: model_8B
  checkpoint_files: [
    model-00001-of-00004.safetensors,
    model-00002-of-00004.safetensors,
    model-00003-of-00004.safetensors,
    model-00004-of-00004.safetensors   
  ]
  recipe_checkpoint: null
  output_dir: checkpoints
  model_type: LLAMA3
resume_from_checkpoint: False

# Fine-tuning arguments
batch_size: 3
epochs: 1
save_per_step: 900

optimizer:
  _component_: torch.optim.AdamW
  lr: 2e-5
  foreach: False

loss:
  _component_: torch.nn.CrossEntropyLoss
max_steps_per_epoch: null
gradient_accumulation_steps: 1


# Training env
device: cuda

# Memory management
enable_activation_checkpointing: True
memory_efficient_fsdp_wrap: True

# Reduced precision
dtype: bf16

# Logging

# metric_logger:
#   _component_: torchtune.utils.metric_logging.DiskLogger
#   log_dir: ${output_dir}
# output_dir: logs
# log_every_n_steps: 1
# log_peak_memory_stats: False

# enable logging to the built-in WandBLogger
metric_logger:
  _component_: torchtune.utils.metric_logging.WandBLogger
  # the W&B project to log to
  project: _
  name: _
output_dir: /logs
log_every_n_steps: 1
log_peak_memory_stats: False

sub_length: 100000
train_type: instruct